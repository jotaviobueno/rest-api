// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Person {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  firstName  String       @map("first_name")
  lastName   String       @map("last_name")
  username   String
  email      String
  password   String
  avatarUrl  String       @map("avatar_url")
  createdAt  DateTime     @default(now()) @map("created_at") @db.Timestamp
  updatedAt  DateTime     @default(now()) @map("updated_at") @db.Timestamp
  deletedAt  DateTime?    @map("deleted_at") @db.Timestamp
  personRole PersonRole[]
  Commerce   Commerce[]

  @@map("person")
}

model PersonRole {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  person    Person    @relation(fields: [personId], references: [id])
  personId  String    @map("person_id") @db.ObjectId
  role      Role      @relation(fields: [roleId], references: [id])
  roleId    String    @map("role_id") @db.ObjectId
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt DateTime? @map("deleted_at") @db.Timestamp

  @@map("person-role")
}

model Role {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String       @unique
  description String?
  createdAt   DateTime     @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime     @default(now()) @map("updated_at") @db.Timestamp
  deletedAt   DateTime?    @map("deleted_at") @db.Timestamp
  personRole  PersonRole[]

  @@map("role")
}

model Commerce {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String    @unique
  descriptions String[]  @default([])
  imagesUrls   String[]  @default([])
  person       Person    @relation(fields: [personId], references: [id])
  personId     String    @map("person_id") @db.ObjectId
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt    DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt    DateTime? @map("deleted_at") @db.Timestamp
  Product      Product[]

  @@map("commerce")
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  stock       Int?
  imagesUrls  String[]  @default([])
  commerce    Commerce  @relation(fields: [commerceId], references: [id])
  commerceId  String    @map("commerce_id") @db.ObjectId
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt   DateTime? @map("deleted_at") @db.Timestamp

  @@map("product")
}
