// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Person {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  firstName  String       @map("first_name")
  lastName   String       @map("last_name")
  username   String
  email      String
  password   String
  avatarUrl  String       @map("avatar_url")
  createdAt  DateTime     @default(now()) @map("created_at") @db.Timestamp
  updatedAt  DateTime     @default(now()) @map("updated_at") @db.Timestamp
  deletedAt  DateTime?    @map("deleted_at") @db.Timestamp
  personRole PersonRole[]
  Commerce   Commerce[]
  Address    Address[]
  Stock      Stock[]

  @@map("person")
}

model PersonRole {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  person    Person    @relation(fields: [personId], references: [id])
  personId  String    @map("person_id") @db.ObjectId
  role      Role      @relation(fields: [roleId], references: [id])
  roleId    String    @map("role_id") @db.ObjectId
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt DateTime? @map("deleted_at") @db.Timestamp

  @@map("person_role")
}

model Role {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String       @unique
  description String?
  createdAt   DateTime     @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime     @default(now()) @map("updated_at") @db.Timestamp
  deletedAt   DateTime?    @map("deleted_at") @db.Timestamp
  personRole  PersonRole[]

  @@map("role")
}

model Commerce {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  name             String             @unique
  descriptions     String[]           @default([])
  imagesUrls       String[]           @default([])
  person           Person             @relation(fields: [personId], references: [id])
  personId         String             @map("person_id") @db.ObjectId
  createdAt        DateTime           @default(now()) @map("created_at") @db.Timestamp
  updatedAt        DateTime           @default(now()) @map("updated_at") @db.Timestamp
  deletedAt        DateTime?          @map("deleted_at") @db.Timestamp
  product          Product[]
  seller           Seller[]
  Supplier         Supplier[]
  Address          Address[]
  CommerceCustomer CommerceCustomer[]

  @@map("commerce")
}

model Seller {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName  String    @map("first_name")
  lastName   String    @map("last_name")
  email      String
  commerce   Commerce  @relation(fields: [commerceId], references: [id])
  commerceId String    @map("commerce_id") @db.ObjectId
  avatarUrl  String    @map("avatar_url")
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt  DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt  DateTime? @map("deleted_at") @db.Timestamp
  Address    Address[]

  @@map("seller")
}

model Product {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String[]  @default([])
  theme         Theme     @relation(fields: [themesIds], references: [id])
  themesIds     String[]  @default([]) @map("theme_id") @db.ObjectId
  category      Category  @relation(fields: [categoriesIds], references: [id])
  categoriesIds String[]  @default([]) @map("categories_ids") @db.ObjectId
  type          String
  price         Float
  stock         Int?
  imagesUrls    String[]  @default([])
  commerce      Commerce  @relation(fields: [commerceId], references: [id])
  commerceId    String    @map("commerce_id") @db.ObjectId
  createdAt     DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt     DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt     DateTime? @map("deleted_at") @db.Timestamp

  @@map("product")
}

model Stock {
  id                   String             @id @default(auto()) @map("_id") @db.ObjectId
  type                 String
  product              Person             @relation(fields: [personId], references: [id])
  personId             String             @map("product_id") @db.ObjectId
  distributionCenter   DistributionCenter @relation(fields: [distributionCenterId], references: [id])
  distributionCenterId String             @map("distribution_center_id") @db.ObjectId
  createdAt            DateTime           @default(now()) @map("created_at") @db.Timestamp
  updatedAt            DateTime           @default(now()) @map("updated_at") @db.Timestamp
  deletedAt            DateTime?          @map("deleted_at") @db.Timestamp

  @@map("stock")
}

model Theme {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt   DateTime? @map("deleted_at") @db.Timestamp
  Product     Product[]

  @@map("theme")
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt DateTime? @map("deleted_at") @db.Timestamp
  product   Product[]

  @@map("category")
}

model CommerceCustomer {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  customer   Customer  @relation(fields: [customerId], references: [id])
  customerId String    @map("customer_id") @db.ObjectId
  commerce   Commerce  @relation(fields: [commerceId], references: [id])
  commerceId String    @map("commerce_id") @db.ObjectId
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt  DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt  DateTime? @map("deleted_at") @db.Timestamp

  @@map("commerce_customer")
}

model Customer {
  id               String             @id @default(auto()) @map("_id") @db.ObjectId
  firstName        String             @map("first_name")
  lastName         String             @map("last_name")
  username         String
  email            String
  avatarUrl        String             @map("avatar_url")
  createdAt        DateTime           @default(now()) @map("created_at") @db.Timestamp
  updatedAt        DateTime           @default(now()) @map("updated_at") @db.Timestamp
  deletedAt        DateTime?          @map("deleted_at") @db.Timestamp
  Address          Address[]
  CommerceCustomer CommerceCustomer[]

  @@map("customer")
}

model Supplier {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  phone      String?
  email      String
  cnpj       String
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt  DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt  DateTime? @map("deleted_at") @db.Timestamp
  commerce   Commerce  @relation(fields: [commerceId], references: [id])
  commerceId String    @map("commerce_id") @db.ObjectId
  Address    Address[]

  @@map("supplier")
}

model Address {
  id                   String             @id @default(auto()) @map("_id") @db.ObjectId
  street               String
  number               String
  neighborhood         String
  city                 String
  zipCode              Int                @map("zip_code")
  state                String
  createdAt            DateTime           @default(now()) @map("created_at") @db.Timestamp
  updatedAt            DateTime           @default(now()) @map("updated_at") @db.Timestamp
  deletedAt            DateTime?          @map("deleted_at") @db.Timestamp
  person               Person?            @relation(fields: [personId], references: [id])
  personId             String?            @map("person_id") @db.ObjectId
  customer             Customer?          @relation(fields: [customerId], references: [id])
  customerId           String?            @map("customer_id") @db.ObjectId
  supplier             Supplier?          @relation(fields: [supplierId], references: [id])
  supplierId           String?            @map("supplier_id") @db.ObjectId
  commerce             Commerce?          @relation(fields: [commerceId], references: [id])
  commerceId           String?            @map("commerce_id") @db.ObjectId
  seller               Seller?            @relation(fields: [sellerId], references: [id])
  sellerId             String?            @map("seller_id") @db.ObjectId
  distributionCenter   DistributionCenter @relation(fields: [distributionCenterId], references: [id])
  distributionCenterId String             @map("distribution_center_id") @db.ObjectId
  carrier              Carrier            @relation(fields: [carrierId], references: [id])
  carrierId            String             @map("carrier_id") @db.ObjectId

  @@map("address")
}

model DistributionCenter {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt   DateTime? @map("deleted_at") @db.Timestamp
  Address     Address[]
  Stock       Stock[]

  @@map("distribution_center")
}

model Carrier {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  phone     String?
  cpf       String
  cnpj      String?
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt DateTime? @map("deleted_at") @db.Timestamp
  Address   Address[]

  @@map("carrier")
}
